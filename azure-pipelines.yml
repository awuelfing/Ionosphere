# ASP.NET Core (.NET Framework)

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  displayName: 'NuGet restore for solution'
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: "Build solution"
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\DxWs\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "Publish ClusterConsole"
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: './ClusterConsole/ClusterConsole.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/ClusterConsole'

- task: PowerShell@2
  displayName: "Rename ClusterConsole"
  inputs:
     targetType: 'inline'
     script: 'Move-Item -Path "./ClusterConsole/ClusterConsole.zip" -Destination "./ClusterConsole/ClusterConsole$([DateTime]::Now.ToString("_yyyyMMdd_hhmm")).zip"'
     workingDirectory: '$(Build.ArtifactStagingDirectory)'

- task: AzureRmWebAppDeployment@4
  displayName: "Push DxWs to Azure"
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Pay-As-You-Go(2a4e0346-ab89-4c4e-91a3-7b73249b2129)'
    appType: 'webApp'
    WebAppName: 'ionosphere'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/DxWs/*.zip'
    

- task: AzureFileCopy@2
  displayName: "Copy ClusterConsole to Azure Blob"
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)/ClusterConsole/*.zip'
    azureSubscription: 'Pay-As-You-Go(2a4e0346-ab89-4c4e-91a3-7b73249b2129)'
    Destination: 'AzureBlob'
    storage: 'severalrgb360'
    ContainerName: 'Binaries'
    BlobPrefix: 'Current'
    CleanTargetBeforeCopy: true

- task: PublishBuildArtifacts@1
  displayName: "Publish all outputs to pipeline artifacts"
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'